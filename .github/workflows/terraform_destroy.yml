name: "Terraform Destroy"

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}

jobs:
  terraform_plan_destroy:
    name: "Terraform Plan Destroy"
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan Destroy
        run: terraform plan -destroy

  terraform_destroy:
    name: "Terraform Destroy"
    needs: [terraform_plan_destroy]
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

  terraform_test_destroy:
    name: "Terraform Test"
    needs: [terraform_plan_destroy, terraform_destroy]
    runs-on: ubuntu-latest
    environment: production

    steps:
      # TEST placholder
      - name: Checkout
        run: echo "TEST Placeholder"
